#version 120
vec4 outline(float distance, float linewidth, float antialias, vec4 stroke, vec4 fill)
{
    vec4 frag_color;
    float t = linewidth/2.0 - antialias;
    float signed_distance = distance;
    float border_distance = abs(signed_distance) - t;
    float alpha = border_distance/antialias;
    alpha = exp(-alpha*alpha);
    if( border_distance < 0.0 )
        frag_color = stroke;
    else if( signed_distance < 0.0 )
        frag_color = mix(fill, stroke, sqrt(alpha));
    else
        frag_color = vec4(stroke.rgb, stroke.a * alpha);
    return frag_color;
}
varying float v_radius;
void main()
{
    vec4 stroke = vec4(0,0,0,0);
    vec4 fill = vec4(0,0,0,0.1);
    float distance = length(2.0*v_radius*gl_PointCoord.xy - vec2(v_radius));;
    gl_FragColor = outline(distance - (v_radius-1.0), 1, 1, stroke, fill);
}
